diff --git a/src/sig_process.py b/src/sig_process.py
index 7f3d4cde..d8e5a6cb 100644
--- a/src/sig_process.py
+++ b/src/sig_process.py
@@ -18,6 +18,52 @@ from src.fft_funcs import fivesmt_scupyrfft

 ###############################################################################
 # Utility helpers
 ###############################################################################

 logger = logging.getLogger(__name__)
 logger.setLevel(logging.INFO)

+###############################################################################
+# AVERAGING-PREPROCESS：何サンプルごとに平均して信号・ノイズ波形を生成する
+###############################################################################
+
+def _average_groups(arr: np.ndarray, n: int) -> np.ndarray:
+    """
+    arr.shape = (N_waveforms, N_points)
+    n: averaging_num
+    → N_waveforms // n 個のグループに分け、各グループを平均して返す。
+    """
+    if n <= 1:
+        return arr.copy()
+    m = arr.shape[0] // n
+    if m == 0:
+        raise ValueError("averaging_num is larger than the number of waveforms.")
+    # 先頭から m*n 行だけを reshape して平均
+    trimmed = arr[: m * n].reshape(m, n, -1)
+    return trimmed.mean(axis=1)
+
+
+def prepare_averaged_datasets(
+    sig_raw: np.ndarray,
+    noi_raw: np.ndarray,
+    averaging_num: int,
+) -> Tuple[np.ndarray, np.ndarray]:
+    """
+    信号（sig_raw）とノイズ（noi_raw）をそれぞれ averaging_num 枚ごとに平均し、
+    signal_diff (= averaged_signal - 全ノイズ平均) と
+    averaged_noise_waveforms を返す。
+
+    戻り値:
+      signal_diff: shape = (N_sig_groups, N_points)
+      noi_ave:     shape = (N_noi_groups, N_points)
+    """
+    sig_ave = _average_groups(sig_raw, averaging_num)
+    noi_ave = _average_groups(noi_raw, averaging_num)
+    # 全ノイズの“グローバル平均”を計算（1×N_points）
+    noise_global = noi_raw.mean(axis=0, keepdims=True)
+    # 各グループ化された averaged_signal から“全ノイズ平均”を引く
+    signal_diff = sig_ave - noise_global
+    return signal_diff, noi_ave